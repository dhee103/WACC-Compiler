#!/usr/bin/ruby

# initTime = Time.now

dir = ARGV[0]

files = `find #{dir} -name *.wacc`.split("\n")

def count
  @count ||= -1
  @count += 1
end

# def getString(file)
#   return `./compile #{file}`
# end
#
# def getError(msg)
#   return true
#   # return !(msg.include? "success")
# end
#
# def fullMessage(file)
#   if getError(getString(file))
#      puts "#{file} returns error code: #{getString(file)} #{Time.new.inspect}\n\n"
#      count
#   end
#   # return ""
# end

def outputMessage(file)
  puts "#{file}"
  exitCode = system("./compile #{file}")
  if file.include? "wacc_examples/valid"
    if !exitCode
      count
    end
  elsif file.include? "wacc_examples/invalid"
    if exitCode
      count
    end
  end
  puts "\n\n"
end


initTime = Time.now
lastTime = initTime

# files.map { |file| fullMessage(file) }

files.map { |file| 
  outputMessage(file)  
  puts Time.now - lastTime
  lastTime = Time.now
}

puts "There are #{count}/#{files.length} errors in #{dir}"

puts "Time taken to run compile on all files: #{Time.now - initTime}"
